version: v1.0
name: Node JS
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Set up dependencies
    task:
      jobs:
        - name: yarn install
          commands:
            - sem-version node 12
            - checkout
            - cache restore
            - cache restore node-$(checksum yarn.lock)
            - cache restore cypress-$(checksum yarn.lock)
            - cache restore packages-web-$(checksum yarn.lock)
            - yarn install --frozen-lockfile
            - yarn cypress install
            - cache store
            - cache store node-$(checksum yarn.lock) node_modules
            - cache store cypress-$(checksum yarn.lock) /home/semaphore/.cache/Cypress
            - cache store packages-web-$(checksum yarn.lock) apps/web/node_modules
    dependencies: []
  - name: Jest
    task:
      jobs:
        - name: jest
          commands:
            - sem-version node 12
            - checkout
            - cache restore node-$(checksum yarn.lock)
            - yarn jest
    dependencies:
      - Eslint
  - name: Cypress
    task:
      jobs:
        - name: cypress
          # parallelism: 2
          commands:
            - sem-version node 12
            - checkout
            - cache restore node-$(checksum yarn.lock)
            - cache restore cypress-$(checksum yarn.lock)
            - cache restore packages-web-$(checksum yarn.lock)
            - cache restore sapper-build-$SEMAPHORE_GIT_SHA
            - yarn install
            - find ./apps/web/src
            # - SEMAPHORE_BUILD_NUMBER=$SEMAPHORE_PIPELINE_ID SEMAPHORE_THREAD_COUNT=3 yarn test:ci
            - yarn test:ci
      secrets:
        - name: Percy token
        - name: KnapsackPro token
    dependencies:
      - Sapper static build
  - name: Eslint
    dependencies:
      - Set up dependencies
    task:
      jobs:
        - name: eslint
          commands:
            - sem-version node 12
            - checkout
            - cache restore node-$(checksum yarn.lock)
            - yarn eslint apps/*/src --no-error-on-unmatched-pattern
  - name: Eslint Cypress
    dependencies:
      - Set up dependencies
    task:
      jobs:
        - name: eslint
          commands:
            - sem-version node 12
            - checkout
            - cache restore node-$(checksum yarn.lock)
            - yarn eslint apps/*/cypress
  - name: TypeScript check
    dependencies:
      - Eslint
    task:
      jobs:
        - name: tsc
          commands:
            - sem-version node 12
            - checkout
            - cache restore node-$(checksum yarn.lock)
            - cache restore packages-web-$(checksum yarn.lock)
            - yarn types
  - name: Sapper static build
    dependencies:
      - Eslint Cypress
    task:
      jobs:
        - name: yarn web export
          commands:
            - sem-version node 12
            - checkout
            - cache restore node-$(checksum yarn.lock)
            - cache restore cypress-$(checksum yarn.lock)
            - cache restore packages-web-$(checksum yarn.lock)
            - yarn web export
            - find ./apps/web/__sapper__/
            - cache store sapper-build-$SEMAPHORE_GIT_SHA ./apps/web/__sapper__/
  - name: python packages
    dependencies: []
    task:
      jobs:
        - name: test python packages
          commands:
            - sem-version python 3.8
            - checkout
            - cache restore
            - pip install poetry
            - poetry install
            - poetry run pytest
            - cache store
        - name: Python code style (black)
          commands:
            - sem-version python 3.8
            - checkout
            - cache restore
            - pip install poetry
            - poetry install
            - poetry run black apps --check
        - name: Python types (mypy)
          commands:
            - sem-version python 3.8
            - checkout
            - cache restore
            - pip install poetry
            - poetry install
            - poetry run mypy apps
  - name: PyPi readme
    dependencies: []
    task:
      jobs:
        - name: validate that PyPi readme files are up to date
          commands:
            - sem-version python 3.8
            - checkout
            - cache restore python-$(checksum poetry.lock)
            - pip install poetry
            - poetry install --no-interaction
            - ./scripts/verifyPypiReadmeFiles.sh
            - cache store python-$(checksum poetry.lock) /home/semaphore/.cache/pypoetry
promotions:
  - name: Deploy to production
    pipeline_file: pipeline_2.yml
    auto_promote:
      when: branch = 'main' AND result = 'passed'
  - name: Release packages
    pipeline_file: pipeline_3.yml
    auto_promote:
      when: branch = 'main' AND result = 'passed'
